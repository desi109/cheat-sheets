


-----------------------------------Spring Boot------------------------------------------------------
     
     Bootstrap the Spring Boot project:
spring init --language=java --groupId=com.dmilusheva --artifactId=internships --name=internships --description="Internships application" --package-name=com.dmilusheva.internships --dependencies=web,jpa,postgresql --build=maven --packaging=jar --java-version=11

spring init -l=java -g=com.dmilusheva -a=internships -n=internships --description="Internships application" --package-name=com.dmilusheva.internships -d=web,jpa,postgresql --build=maven -p=jar -j=11

spring init -l=java -g=com.dmilusheva -a=internships -n=internships --description="Internships application" --package-name=com.dmilusheva.internships -d=web,jpa,postgresql --build=maven -p=war -j=11

     
     
     Help for command init:
spring --help init



     Run the app:
cd project-dir-name
mvn spring-boot:run     


     Find what is running on port 8080 :
netstat -ano | grep 8080
sudo netstat -ano -p tcp
netstat -ao | grep LISTEN
ps -ef | grep 8080

     Kill the process:
kill -9 $(lsof -t -i:8080)



     To make a JAR package from project:
cd project-dir-name
mvn package
      And it is in folder -> target
      
      
      To run the JAR file:   (for every system)
cd target
java -jar project-name-0.0.1-SNAPSHOT.jar 


       To run the JAR file:   (for UNIX based systems)
cd target/
./conference-0.0.1-SNAPSHOT.jar 

=====================================================================================================
=====================================================================================================



-----------------------------------PostgreSQL--------------------------------------------------------
     
              https://linuxhint.com/install-pgadmin4-ubuntu/
     
  !!!!!!!!   Check this first: https://www.pgadmin.org/download/pgadmin-4-python/
     
     
     Install PostgreSQL database:
     This command installs PostgreSQL server and related packages:
sudo apt-get install postgresql 



     We check the status of the database with postgresql status command:
/etc/init.d/postgresql status



     After the installation, a postgres user with administration priviliges was created with empty 
     default password. As the first step, we need to set a password for postgres:
sudo -u postgres psql postgres
     psql (12.4)
     Type "help" for help.

     postgres=# \password postgres
     Enter new password: 1234
     Enter it again: 1234
     
     
     
     We create a new database user:
sudo -u postgres createuser --interactive --password user1234
     Shall the new role be a superuser? (y/n) n
     Shall the new role be allowed to create databases? (y/n) y
     Shall the new role be allowed to create more new roles? (y/n) n
     Password: 1234



     We create a new internships database with createdb command, which is going to be owned by user1234 :
sudo -u postgres createdb internships -O user1234


     We edit the pg_hba.conf file:
sudo nano /etc/postgresql/12/main/pg_hba.conf


     In order to be able to run a Spring Boot application with a local PostgreSQL installation, 
     we change the authentication method for the Unix domain socket and local connections to trust.
# "local" is for Unix domain socket connections only
local   all             all                                     trust
# IPv4 local connections:
host    all             all             127.0.0.1/32            trust



     We restart PostgreSQL to enable the changes:
sudo service postgresql restart


     Now we can use the psql tool to connect to the database:
psql -U user1234 -d internships -W
     Password for user user1234: 1234
     psql (12.4)
     Type "help" for help.

     internships=> 
     
     
Note: It was set port -> 8080 by default for this app


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
---------------------------------------------------------------------------------------------------------


 
      If we have user1234, how to create a new conference_app database, 
      which is going to be owned by user1234 :
      
sudo -u postgres createdb conference_app -O user1234
sudo service postgresql restart
psql -U user1234 -d conference_app -W
     Password: 1234
     psql (12.4 (Ubuntu 12.4-1))
     Type "help" for help.
     
     conference_app=> \q               --> to exit
     
     

     Let's create and insert tables and data from existing .sql files:
cd ~/github/conference/db_scripts
psql -U user1234 -d conference_app -f create_tables.sql
psql -U user1234 -d conference_app -f insert_data.sql


Note: I set port -> 5000 for this app


---------------------------------------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

=====================================================================================================
=====================================================================================================





-----------------------------------pgAdmin4 (installation)--------------------------------------------------

sudo apt update
sudo apt install build-essential libssl-dev libffi-dev libgmp3-dev virtualenv python-pip libpq-dev python-dev

mkdir pgAdmin4
cd pgAdmin4
virtualenv pgAdmin4
cd pgAdmin4
source bin/activate
wget https://ftp.postgresql.org/pub/pgadmin/pgadmin4/v4.20/pip/pgadmin4-4.20-py2.py3-none-any.whl

pip install pgadmin4-4.20-py2.py3-none-any.whl

   ----> If ERROR: https://itectec.com/ubuntu/ubuntu-cant-install-pgadmin-4-on-20-04-lts/
   
   
      we are now at path: /home/deisi/pgAdmin4/pgAdmin4/
nano lib/python3.8/site-packages/pgadmin4/config_local.py

      Add the following content in config_local.py.
             import os
             DATA_DIR = os.path.realpath(os.path.expanduser(u'~/.pgadmin/'))
             LOG_FILE = os.path.join(DATA_DIR, 'pgadmin4.log')
             SQLITE_PATH = os.path.join(DATA_DIR, 'pgadmin4.db')
             SESSION_DB_PATH = os.path.join(DATA_DIR, 'sessions')
             STORAGE_DIR = os.path.join(DATA_DIR, 'storage')
             SERVER_MODE = False

pip install flask-htmlmin
python lib/python3.8/site-packages/pgadmin4/pgAdmin4.py

        Now, access:   http://localhost:5050



------------------------
        To start it:  
cd ~/pgAdmin4/pgAdmin4/
source bin/activate
python lib/python3.8/site-packages/pgadmin4/pgAdmin4.py

        Now, go to:   http://localhost:5050


        How to connect to my database using pgadmin4:
        https://stackoverflow.com/questions/41873779/connection-with-my-db-using-pgadmin4
        
        
        Tutorial - pgadmin4/
        https://linuxhint.com/pgadmin4_tutorial_beginners/
